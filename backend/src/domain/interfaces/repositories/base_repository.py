from typing import TypeVar, Protocol, Any, Generic
from pydantic import BaseModel

from domain.models.models import ModelType, ReadModelType, UpdateModelType, CreateModelType


class BaseRepository(Protocol[ModelType, ReadModelType, CreateModelType, UpdateModelType]):
    async def get(self, id: Any) -> ReadModelType: ...
    async def get_all(self, limit: int, offset: int) -> list[ReadModelType]: ...
    async def create(self, obj: CreateModelType) -> ReadModelType: ...
    async def update(self, obj: UpdateModelType) -> ReadModelType: ...
    async def delete(self, id: Any) -> bool: ...